/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * In Point of the Time Ruler. Sets the initial Frame of the animation.
 */
export type InPoint = number;
/**
 * Out Point of the Time Ruler. Sets the final Frame of the animation
 */
export type OutPoint = number;
/**
 * Frame Rate
 */
export type FrameRate = number;
/**
 * Composition Width
 */
export type Width = number;
/**
 * Composition has 3-D layers
 */
export type D = 0 | 1;
/**
 * Composition Height
 */
export type Height = number;
/**
 * Bodymovin Version
 */
export type Version = string;
/**
 * Composition name
 */
export type Name = string;
/**
 * Type of layer: Shape.
 */
export type Type = 4;
/**
 * Transform properties
 */
export type Transform = {
  a?: AnchorPoint;
  p?: Position;
  s?: Scale;
  r?: Rotation;
  o?: Opacity;
  px?: PositionX;
  py?: PositionY;
  pz?: PositionZ;
  sk?: Skew;
  sa?: SkewAxis;
  [k: string]: any;
};
/**
 * Transform Anchor Point
 */
export type AnchorPoint =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Transform Position
 */
export type Position =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Transform Scale
 */
export type Scale =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Transform Rotation
 */
export type Rotation =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Transform Opacity
 */
export type Opacity =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Transform Position X
 */
export type PositionX =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Transform Position Y
 */
export type PositionY =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Transform Position Z
 */
export type PositionZ =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Transform Skew
 */
export type Skew =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Transform Skew Axis
 */
export type SkewAxis =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Auto-Orient along path AE property.
 */
export type AutoOrient = 0 | 1;
/**
 * Blend Mode
 */
export type BlendMode = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15;
/**
 * Matte mode, the layer will inherit the transparency from the layer above
 */
export type MatteMode = 0 | 1 | 2 | 3 | 4;
/**
 * 3d layer flag
 */
export type DLayer = 0 | 1;
/**
 * Layer index in AE. Used for parenting and expressions.
 */
export type Index = number;
/**
 * Parsed layer name used as html class on SVG/HTML renderer
 */
export type Class = string;
/**
 * Parsed layer name used as html id on SVG/HTML renderer
 */
export type LayerHTMLID = string;
/**
 * In Point of layer. Sets the initial frame of the layer.
 */
export type InPoint1 = number;
/**
 * Out Point of layer. Sets the final frame of the layer.
 */
export type OutPoint1 = number;
/**
 * Start Time of layer. Sets the start time of the layer.
 */
export type StartTime = number;
/**
 * After Effects Layer Name. Used for expressions.
 */
export type Name1 = number;
/**
 * Boolean when layer has a mask. Will be deprecated in favor of checking masksProperties.
 */
export type HasMasks = number;
/**
 * Inverted Mask flag
 */
export type Inverted = boolean;
/**
 * Mask name. Used for expressions and effects.
 */
export type Name2 = string;
/**
 * Mask vertices
 */
export type Points =
  | {
      k?: PathDef;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * Defines if property is animated
       */
      a?: number;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: PathDef1[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Mask opacity.
 */
export type Opacity1 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Mask mode. Not all mask types are supported.
 */
export type Mode = "n" | "a" | "s" | "i" | "l" | "d" | "f";
/**
 * List of Masks
 */
export type MasksProperties = {
  inv?: Inverted;
  nm?: Name2;
  pt?: Points;
  o?: Opacity1;
  mode?: Mode;
  [k: string]: any;
}[];
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex = number;
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name3 = string;
/**
 * Effect type.
 */
export type Type1 = 0;
/**
 * Effect value.
 */
export type Value =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Effect Index. Used for expressions. NOT USED. EQUALS SLIDER.
 */
export type EffectIndex1 = number;
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName1 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name4 = string;
/**
 * Effect type.
 */
export type Type2 = 1;
/**
 * Effect value.
 */
export type Value1 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex2 = number;
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName2 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name5 = string;
/**
 * Effect type.
 */
export type Type3 = 2;
/**
 * Effect value.
 */
export type Value2 =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex3 = number;
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName3 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name6 = string;
/**
 * Effect type.
 */
export type Type4 = 2;
/**
 * Effect value.
 */
export type Value3 = (
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    }
)[];
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex4 = number;
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName4 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name7 = string;
/**
 * Effect type.
 */
export type Type5 = 7;
/**
 * Effect value.
 */
export type Value4 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex5 = number;
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName5 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name8 = string;
/**
 * Effect type.
 */
export type Type6 = 5;
/**
 * Effect List of properties.
 */
export type Effects = (
  | {
      ix?: EffectIndex;
      mn?: MatchName;
      nm?: Name3;
      ty?: Type1;
      v?: Value;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex1;
      mn?: MatchName1;
      nm?: Name4;
      ty?: Type2;
      v?: Value1;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex2;
      mn?: MatchName2;
      nm?: Name5;
      ty?: Type3;
      v?: Value2;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex3;
      mn?: MatchName3;
      nm?: Name6;
      ty?: Type4;
      v?: Value3;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex4;
      mn?: MatchName4;
      nm?: Name7;
      ty?: Type5;
      v?: Value4;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex5;
      mn?: MatchName5;
      nm?: Name8;
      ty?: Type6;
      ef?: Effects;
      /**
       * Enabled AE property value
       */
      en?: number;
      [k: string]: any;
    }
  | any
  | {
      ix?: EffectIndex6;
      mn?: MatchName6;
      nm?: Name9;
      ty?: Type7;
      v?: Value5;
      [k: string]: any;
    }
  | {
      [k: string]: any;
    }
  | {
      ix?: EffectIndex7;
      mn?: MatchName7;
      nm?: Name10;
      ty?: Type8;
      v?: Value6;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex8;
      mn?: MatchName8;
      nm?: Name11;
      ty?: Type9;
      ef?: Effects1;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex9;
      mn?: MatchName9;
      nm?: Name12;
      ty?: Type10;
      ef?: Effects2;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex10;
      mn?: MatchName10;
      nm?: Name13;
      ty?: Type11;
      ef?: Effects3;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex11;
      mn?: MatchName11;
      nm?: Name14;
      ty?: Type12;
      ef?: Effects4;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex12;
      mn?: MatchName12;
      nm?: Name15;
      ty?: Type13;
      ef?: Effects5;
      [k: string]: any;
    }
)[];
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex6 = number;
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName6 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name9 = string;
/**
 * Effect type.
 */
export type Type7 = 7;
/**
 * Effect value.
 */
export type Value5 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Effect Index. Used for expressions. NOT USED. EQUALS SLIDER.
 */
export type EffectIndex7 = number;
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName7 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name10 = string;
/**
 * Effect type.
 */
export type Type8 = 0;
/**
 * Effect value.
 */
export type Value6 = {
  /**
   * Property Value
   */
  k?: number;
  /**
   * Property Expression. An AE expression that modifies the value.
   */
  x?: string;
  /**
   * Property Index. Used for expressions.
   */
  ix?: string;
  [k: string]: any;
};
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex8 = number;
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName8 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name11 = string;
/**
 * Effect type.
 */
export type Type9 = 20;
/**
 * Effect List of properties.
 */
export type Effects1 = [
  {
    ix?: EffectIndex2;
    mn?: MatchName2;
    nm?: Name5;
    ty?: Type3;
    v?: Value2;
    [k: string]: any;
  },
  {
    ix?: EffectIndex2;
    mn?: MatchName2;
    nm?: Name5;
    ty?: Type3;
    v?: Value2;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  }
];
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex9 = number;
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName9 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name12 = string;
/**
 * Effect type.
 */
export type Type10 = 21;
/**
 * Effect List of properties.
 */
export type Effects2 = [
  {
    ix?: EffectIndex3;
    mn?: MatchName3;
    nm?: Name6;
    ty?: Type4;
    v?: Value3;
    [k: string]: any;
  },
  {
    ix?: EffectIndex6;
    mn?: MatchName6;
    nm?: Name9;
    ty?: Type7;
    v?: Value5;
    [k: string]: any;
  },
  {
    ix?: EffectIndex2;
    mn?: MatchName2;
    nm?: Name5;
    ty?: Type3;
    v?: Value2;
    [k: string]: any;
  },
  {
    ix?: EffectIndex6;
    mn?: MatchName6;
    nm?: Name9;
    ty?: Type7;
    v?: Value5;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  }
];
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex10 = number;
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName10 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name13 = string;
/**
 * Effect type.
 */
export type Type11 = 22;
/**
 * Effect List of properties.
 */
export type Effects3 = [
  {
    ix?: EffectIndex2;
    mn?: MatchName2;
    nm?: Name5;
    ty?: Type3;
    v?: Value2;
    [k: string]: any;
  },
  {
    ix?: EffectIndex4;
    mn?: MatchName4;
    nm?: Name7;
    ty?: Type5;
    v?: Value4;
    [k: string]: any;
  },
  {
    ix?: EffectIndex4;
    mn?: MatchName4;
    nm?: Name7;
    ty?: Type5;
    v?: Value4;
    [k: string]: any;
  },
  {
    ix?: EffectIndex2;
    mn?: MatchName2;
    nm?: Name5;
    ty?: Type3;
    v?: Value2;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex6;
    mn?: MatchName6;
    nm?: Name9;
    ty?: Type7;
    v?: Value5;
    [k: string]: any;
  },
  {
    ix?: EffectIndex6;
    mn?: MatchName6;
    nm?: Name9;
    ty?: Type7;
    v?: Value5;
    [k: string]: any;
  }
];
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex11 = number;
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName11 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name14 = string;
/**
 * Effect type.
 */
export type Type12 = 23;
/**
 * Effect List of properties.
 */
export type Effects4 = [
  {
    ix?: EffectIndex2;
    mn?: MatchName2;
    nm?: Name5;
    ty?: Type3;
    v?: Value2;
    [k: string]: any;
  },
  {
    ix?: EffectIndex2;
    mn?: MatchName2;
    nm?: Name5;
    ty?: Type3;
    v?: Value2;
    [k: string]: any;
  },
  {
    ix?: EffectIndex2;
    mn?: MatchName2;
    nm?: Name5;
    ty?: Type3;
    v?: Value2;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  }
];
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex12 = number;
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName12 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name15 = string;
/**
 * Effect type.
 */
export type Type13 = 23;
/**
 * ffect List of properties.
 */
export type Effects5 = [
  {
    ix?: EffectIndex6;
    mn?: MatchName6;
    nm?: Name9;
    ty?: Type7;
    v?: Value5;
    [k: string]: any;
  },
  any,
  any,
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  any,
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  any,
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  any,
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  any,
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  },
  {
    ix?: EffectIndex;
    mn?: MatchName;
    nm?: Name3;
    ty?: Type1;
    v?: Value;
    [k: string]: any;
  }
];
/**
 * List of Effects
 */
export type Effects6 = (
  | {
      ix?: EffectIndex;
      mn?: MatchName;
      nm?: Name3;
      ty?: Type1;
      v?: Value;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex1;
      mn?: MatchName1;
      nm?: Name4;
      ty?: Type2;
      v?: Value1;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex2;
      mn?: MatchName2;
      nm?: Name5;
      ty?: Type3;
      v?: Value2;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex3;
      mn?: MatchName3;
      nm?: Name6;
      ty?: Type4;
      v?: Value3;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex4;
      mn?: MatchName4;
      nm?: Name7;
      ty?: Type5;
      v?: Value4;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex5;
      mn?: MatchName5;
      nm?: Name8;
      ty?: Type6;
      ef?: Effects;
      /**
       * Enabled AE property value
       */
      en?: number;
      [k: string]: any;
    }
  | any
  | {
      ix?: EffectIndex6;
      mn?: MatchName6;
      nm?: Name9;
      ty?: Type7;
      v?: Value5;
      [k: string]: any;
    }
  | {
      [k: string]: any;
    }
  | {
      ix?: EffectIndex7;
      mn?: MatchName7;
      nm?: Name10;
      ty?: Type8;
      v?: Value6;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex8;
      mn?: MatchName8;
      nm?: Name11;
      ty?: Type9;
      ef?: Effects1;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex9;
      mn?: MatchName9;
      nm?: Name12;
      ty?: Type10;
      ef?: Effects2;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex10;
      mn?: MatchName10;
      nm?: Name13;
      ty?: Type11;
      ef?: Effects3;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex11;
      mn?: MatchName11;
      nm?: Name14;
      ty?: Type12;
      ef?: Effects4;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex12;
      mn?: MatchName12;
      nm?: Name15;
      ty?: Type13;
      ef?: Effects5;
      [k: string]: any;
    }
)[];
/**
 * Layer Time Stretching
 */
export type Stretch = number;
/**
 * Layer Parent. Uses ind of parent.
 */
export type Parent = number;
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName13 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name16 = string;
/**
 * After Effect's Direction. Direction how the shape is drawn. Used for trim path for example.
 */
export type Direction = number;
/**
 * Shape content type.
 */
export type Type14 = "sh";
/**
 * Shape's vertices
 */
export type Vertices =
  | {
      k?: PathDef;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * Defines if property is animated
       */
      a?: number;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: PathDef1[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName14 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name17 = string;
/**
 * After Effect's Direction. Direction how the shape is drawn. Used for trim path for example.
 */
export type Direction1 = number;
/**
 * Shape content type.
 */
export type Type15 = "rc";
/**
 * Rect's position
 */
export type Position1 =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Rect's size
 */
export type Size =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Rect's rounded corners
 */
export type RoundedCorners =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName15 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name18 = string;
/**
 * After Effect's Direction. Direction how the shape is drawn. Used for trim path for example.
 */
export type Direction2 = number;
/**
 * Shape content type.
 */
export type Type16 = "el";
/**
 * Ellipse's position
 */
export type Position2 =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Ellipse's size
 */
export type Size1 =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName16 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name19 = string;
/**
 * After Effect's Direction. Direction how the shape is drawn. Used for trim path for example.
 */
export type Direction3 = number;
/**
 * Shape content type.
 */
export type Type17 = "sr";
/**
 * Star's position
 */
export type Position3 =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Star's inner radius. (Star only)
 */
export type InnerRadius =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Star's inner roundness. (Star only)
 */
export type InnerRoundness =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Star's outer radius.
 */
export type OuterRadius =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Star's outer roundness.
 */
export type OuterRoundness =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Star's rotation.
 */
export type Rotation1 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Star's number of points.
 */
export type Points1 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Star's type. Polygon or Star.
 */
export type StarType = 1 | 2;
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName17 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name20 = string;
/**
 * Shape content type.
 */
export type Type18 = "fl";
/**
 * Fill Opacity
 */
export type Opacity2 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Fill Color
 */
export type Color =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName18 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name21 = string;
/**
 * Shape content type.
 */
export type Type19 = "gf";
/**
 * Fill Opacity
 */
export type Opacity3 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Gradient Start Point
 */
export type StartPoint =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Gradient End Point
 */
export type EndPoint =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Gradient Type
 */
export type Type20 = 1 | 2;
/**
 * Gradient Highlight Length. Only if type is Radial
 */
export type HighlightLength =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Highlight Angle. Only if type is Radial
 */
export type HighlightAngle =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName19 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name22 = string;
/**
 * Shape content type.
 */
export type Type21 = "gs";
/**
 * Stroke Opacity
 */
export type Opacity4 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Gradient Start Point
 */
export type StartPoint1 =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Gradient End Point
 */
export type EndPoint1 =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Gradient Type
 */
export type Type22 = 1 | 2;
/**
 * Gradient Highlight Length. Only if type is Radial
 */
export type HighlightLength1 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Highlight Angle. Only if type is Radial
 */
export type HighlightAngle1 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Gradient Stroke Width
 */
export type StrokeWidth =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Gradient Stroke Line Cap
 */
export type LineCap = 1 | 2 | 3;
/**
 * Gradient Stroke Line Join
 */
export type LineJoin = 1 | 2 | 3;
/**
 * Gradient Stroke Miter Limit. Only if Line Join is set to Miter.
 */
export type MiterLimit = number;
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName20 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name23 = string;
/**
 * Shape content type.
 */
export type Type23 = "st";
/**
 * Stroke Line Cap
 */
export type LineCap1 = 1 | 2 | 3;
/**
 * Stroke Line Join
 */
export type LineJoin1 = 1 | 2 | 3;
/**
 * Stroke Miter Limit. Only if Line Join is set to Miter.
 */
export type MiterLimit1 = number;
/**
 * Stroke Opacity
 */
export type Opacity5 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Stroke Width
 */
export type Width1 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Stroke Color
 */
export type Color1 =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName21 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name24 = string;
/**
 * Shape content type. THIS FEATURE IS NOT SUPPORTED. It's exported because if you export it, they will come.
 */
export type Type24 = "mm";
/**
 * Merge Mode
 */
export type MergeMode = number;
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName22 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name25 = string;
/**
 * Shape content type.
 */
export type Type25 = "tm";
/**
 * Trim Start.
 */
export type Start =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Trim End.
 */
export type End =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Trim Offset.
 */
export type Offset =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName23 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name26 = string;
/**
 * Shape content type.
 */
export type Type26 = "gr";
/**
 * Group number of properties. Used for expressions.
 */
export type NumberOfProperties = number;
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName24 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name27 = string;
/**
 * Shape content type.
 */
export type Type27 = "rd";
/**
 * Rounded Corner Radius
 */
export type Radius =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * After Effect's Name. Used for expressions.
 */
export type Name28 = string;
/**
 * Shape Transform Anchor Point
 */
export type AnchorPoint1 =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Shape Transform Position
 */
export type Position4 =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Shape Transform Scale
 */
export type Scale1 =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Shape Transform Rotation
 */
export type Rotation2 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Shape Transform Opacity
 */
export type Opacity6 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Shape Transform Skew
 */
export type Skew1 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Shape Transform Skew Axis
 */
export type SkewAxis1 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Group list of items
 */
export type Items = (
  | PathShape
  | RectShape
  | EllipseShape
  | StarShape
  | FillShape
  | GradientFillShape
  | GradientStrokeShape
  | StrokeShape
  | MergeShape
  | TrimShape
  | GroupShape
  | RoundShape
  | TransformShape
)[];
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName25 = string;
/**
 * After Effect's Name. Used for expressions.
 */
export type Name29 = string;
/**
 * Shape content type.
 */
export type Type28 = "rp";
/**
 * Number of Copies
 */
export type Copies =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Offset of Copies
 */
export type Offset1 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Composite of copies
 */
export type Composite = 1 | 2;
/**
 * Transform values for each repeater copy
 */
export type Transform1 = {
  a?: AnchorPoint;
  p?: Position;
  s?: Scale;
  r?: Rotation;
  o?: Opacity;
  px?: PositionX;
  py?: PositionY;
  pz?: PositionZ;
  sk?: Skew;
  sa?: SkewAxis;
  [k: string]: any;
};
/**
 * Shape list of items
 */
export type Items1 = (
  | PathShape
  | RectShape
  | EllipseShape
  | StarShape
  | FillShape
  | GradientFillShape
  | GradientStrokeShape
  | StrokeShape
  | MergeShape
  | TrimShape
  | GroupShape
  | RoundShape
  | RepeaterShape
)[];
/**
 * Type of layer: Solid.
 */
export type Type29 = 1;
/**
 * Transform properties
 */
export type Transform2 = {
  a?: AnchorPoint;
  p?: Position;
  s?: Scale;
  r?: Rotation;
  o?: Opacity;
  px?: PositionX;
  py?: PositionY;
  pz?: PositionZ;
  sk?: Skew;
  sa?: SkewAxis;
  [k: string]: any;
};
/**
 * Auto-Orient along path AE property.
 */
export type AutoOrient1 = 0 | 1;
/**
 * Blend Mode
 */
export type BlendMode1 = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15;
/**
 * 3d layer flag
 */
export type DLayer1 = 0 | 1;
/**
 * Layer index in AE. Used for parenting and expressions.
 */
export type Index1 = number;
/**
 * Parsed layer name used as html class on SVG/HTML renderer
 */
export type Class1 = string;
/**
 * Parsed layer name used as html id on SVG/HTML renderer
 */
export type LayerHTMLID1 = string;
/**
 * In Point of layer. Sets the initial frame of the layer.
 */
export type InPoint2 = number;
/**
 * Out Point of layer. Sets the final frame of the layer.
 */
export type OutPoint2 = number;
/**
 * Start Time of layer. Sets the start time of the layer.
 */
export type StartTime1 = number;
/**
 * After Effects Layer Name. Used for expressions.
 */
export type Name30 = number;
/**
 * Boolean when layer has a mask. Will be deprecated in favor of checking masksProperties.
 */
export type HasMasks1 = number;
/**
 * List of Masks
 */
export type MasksProperties1 = {
  inv?: Inverted;
  nm?: Name2;
  pt?: Points;
  o?: Opacity1;
  mode?: Mode;
  [k: string]: any;
}[];
/**
 * Auto-Orient along path AE property.
 */
export type Effects7 = 0 | 1;
/**
 * Layer Time Stretching
 */
export type Stretch1 = number;
/**
 * Layer Parent. Uses ind of parent.
 */
export type Parent1 = number;
/**
 * Color of the solid in hex
 */
export type SolidColor = string;
/**
 * Height of the solid.
 */
export type SolidHeight = number;
/**
 * Width of the solid.
 */
export type SolidWidth = number;
/**
 * Type of layer: Image.
 */
export type Type30 = 2;
/**
 * Transform properties
 */
export type Transform3 = {
  a?: AnchorPoint;
  p?: Position;
  s?: Scale;
  r?: Rotation;
  o?: Opacity;
  px?: PositionX;
  py?: PositionY;
  pz?: PositionZ;
  sk?: Skew;
  sa?: SkewAxis;
  [k: string]: any;
};
/**
 * Auto-Orient along path AE property.
 */
export type AutoOrient2 = 0 | 1;
/**
 * Blend Mode
 */
export type BlendMode2 = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15;
/**
 * 3d layer flag
 */
export type DLayer2 = 0 | 1;
/**
 * Layer index in AE. Used for parenting and expressions.
 */
export type Index2 = number;
/**
 * Parsed layer name used as html class on SVG/HTML renderer
 */
export type Class2 = string;
/**
 * Parsed layer name used as html id on SVG/HTML renderer
 */
export type LayerHTMLID2 = string;
/**
 * In Point of layer. Sets the initial frame of the layer.
 */
export type InPoint3 = number;
/**
 * Out Point of layer. Sets the final frame of the layer.
 */
export type OutPoint3 = number;
/**
 * Start Time of layer. Sets the start time of the layer.
 */
export type StartTime2 = number;
/**
 * After Effects Layer Name. Used for expressions.
 */
export type Name31 = number;
/**
 * Boolean when layer has a mask. Will be deprecated in favor of checking masksProperties.
 */
export type HasMasks2 = number;
/**
 * List of Masks
 */
export type MasksProperties2 = {
  inv?: Inverted;
  nm?: Name2;
  pt?: Points;
  o?: Opacity1;
  mode?: Mode;
  [k: string]: any;
}[];
/**
 * List of Effects
 */
export type Effects8 = (
  | {
      ix?: EffectIndex;
      mn?: MatchName;
      nm?: Name3;
      ty?: Type1;
      v?: Value;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex1;
      mn?: MatchName1;
      nm?: Name4;
      ty?: Type2;
      v?: Value1;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex2;
      mn?: MatchName2;
      nm?: Name5;
      ty?: Type3;
      v?: Value2;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex3;
      mn?: MatchName3;
      nm?: Name6;
      ty?: Type4;
      v?: Value3;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex4;
      mn?: MatchName4;
      nm?: Name7;
      ty?: Type5;
      v?: Value4;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex5;
      mn?: MatchName5;
      nm?: Name8;
      ty?: Type6;
      ef?: Effects;
      /**
       * Enabled AE property value
       */
      en?: number;
      [k: string]: any;
    }
  | any
  | {
      ix?: EffectIndex6;
      mn?: MatchName6;
      nm?: Name9;
      ty?: Type7;
      v?: Value5;
      [k: string]: any;
    }
  | {
      [k: string]: any;
    }
  | {
      ix?: EffectIndex7;
      mn?: MatchName7;
      nm?: Name10;
      ty?: Type8;
      v?: Value6;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex8;
      mn?: MatchName8;
      nm?: Name11;
      ty?: Type9;
      ef?: Effects1;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex9;
      mn?: MatchName9;
      nm?: Name12;
      ty?: Type10;
      ef?: Effects2;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex10;
      mn?: MatchName10;
      nm?: Name13;
      ty?: Type11;
      ef?: Effects3;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex11;
      mn?: MatchName11;
      nm?: Name14;
      ty?: Type12;
      ef?: Effects4;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex12;
      mn?: MatchName12;
      nm?: Name15;
      ty?: Type13;
      ef?: Effects5;
      [k: string]: any;
    }
)[];
/**
 * Layer Time Stretching
 */
export type Stretch2 = number;
/**
 * Layer Parent. Uses ind of parent.
 */
export type Parent2 = number;
/**
 * id pointing to the source image defined on 'assets' object
 */
export type ReferenceID = string;
/**
 * Type of layer: Null.
 */
export type Type31 = 3;
/**
 * Transform properties
 */
export type Transform4 = {
  a?: AnchorPoint;
  p?: Position;
  s?: Scale;
  r?: Rotation;
  o?: Opacity;
  px?: PositionX;
  py?: PositionY;
  pz?: PositionZ;
  sk?: Skew;
  sa?: SkewAxis;
  [k: string]: any;
};
/**
 * Auto-Orient along path AE property.
 */
export type AutoOrient3 = 0 | 1;
/**
 * 3d layer flag
 */
export type DLayer3 = 0 | 1;
/**
 * Layer index in AE. Used for parenting and expressions.
 */
export type Index3 = number;
/**
 * Parsed layer name used as html class on SVG/HTML renderer
 */
export type Class3 = string;
/**
 * Parsed layer name used as html id on SVG/HTML renderer
 */
export type LayerHTMLID3 = string;
/**
 * In Point of layer. Sets the initial frame of the layer.
 */
export type InPoint4 = number;
/**
 * Out Point of layer. Sets the final frame of the layer.
 */
export type OutPoint4 = number;
/**
 * Start Time of layer. Sets the start time of the layer.
 */
export type StartTime3 = number;
/**
 * After Effects Layer Name. Used for expressions.
 */
export type Name32 = number;
/**
 * List of Effects
 */
export type Effects9 = (
  | {
      ix?: EffectIndex;
      mn?: MatchName;
      nm?: Name3;
      ty?: Type1;
      v?: Value;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex1;
      mn?: MatchName1;
      nm?: Name4;
      ty?: Type2;
      v?: Value1;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex2;
      mn?: MatchName2;
      nm?: Name5;
      ty?: Type3;
      v?: Value2;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex3;
      mn?: MatchName3;
      nm?: Name6;
      ty?: Type4;
      v?: Value3;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex4;
      mn?: MatchName4;
      nm?: Name7;
      ty?: Type5;
      v?: Value4;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex5;
      mn?: MatchName5;
      nm?: Name8;
      ty?: Type6;
      ef?: Effects;
      /**
       * Enabled AE property value
       */
      en?: number;
      [k: string]: any;
    }
  | any
  | {
      ix?: EffectIndex6;
      mn?: MatchName6;
      nm?: Name9;
      ty?: Type7;
      v?: Value5;
      [k: string]: any;
    }
  | {
      [k: string]: any;
    }
  | {
      ix?: EffectIndex7;
      mn?: MatchName7;
      nm?: Name10;
      ty?: Type8;
      v?: Value6;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex8;
      mn?: MatchName8;
      nm?: Name11;
      ty?: Type9;
      ef?: Effects1;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex9;
      mn?: MatchName9;
      nm?: Name12;
      ty?: Type10;
      ef?: Effects2;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex10;
      mn?: MatchName10;
      nm?: Name13;
      ty?: Type11;
      ef?: Effects3;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex11;
      mn?: MatchName11;
      nm?: Name14;
      ty?: Type12;
      ef?: Effects4;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex12;
      mn?: MatchName12;
      nm?: Name15;
      ty?: Type13;
      ef?: Effects5;
      [k: string]: any;
    }
)[];
/**
 * Layer Time Stretching
 */
export type Stretch3 = number;
/**
 * Layer Parent. Uses ind of parent.
 */
export type Parent3 = number;
/**
 * Type of layer: Text.
 */
export type Type32 = 5;
/**
 * Transform properties
 */
export type Transform5 = {
  a?: AnchorPoint;
  p?: Position;
  s?: Scale;
  r?: Rotation;
  o?: Opacity;
  px?: PositionX;
  py?: PositionY;
  pz?: PositionZ;
  sk?: Skew;
  sa?: SkewAxis;
  [k: string]: any;
};
/**
 * Auto-Orient along path AE property.
 */
export type AutoOrient4 = 0 | 1;
/**
 * Blend Mode
 */
export type BlendMode3 = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15;
/**
 * 3d layer flag
 */
export type DLayer4 = 0 | 1;
/**
 * Layer index in AE. Used for parenting and expressions.
 */
export type Index4 = number;
/**
 * Parsed layer name used as html class on SVG/HTML renderer
 */
export type Class4 = string;
/**
 * Parsed layer name used as html id on SVG/HTML renderer
 */
export type LayerHTMLID4 = string;
/**
 * In Point of layer. Sets the initial frame of the layer.
 */
export type InPoint5 = number;
/**
 * Out Point of layer. Sets the final frame of the layer.
 */
export type OutPoint5 = number;
/**
 * Start Time of layer. Sets the start time of the layer.
 */
export type StartTime4 = number;
/**
 * After Effects Layer Name. Used for expressions.
 */
export type Name33 = number;
/**
 * Boolean when layer has a mask. Will be deprecated in favor of checking masksProperties.
 */
export type HasMasks3 = number;
/**
 * List of Masks
 */
export type MasksProperties3 = {
  inv?: Inverted;
  nm?: Name2;
  pt?: Points;
  o?: Opacity1;
  mode?: Mode;
  [k: string]: any;
}[];
/**
 * Auto-Orient along path AE property.
 */
export type Effects10 = 0 | 1;
/**
 * Layer Time Stretching
 */
export type Stretch4 = number;
/**
 * Layer Parent. Uses ind of parent.
 */
export type Parent4 = number;
/**
 * Text animator Position
 */
export type Position5 =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Text animator Anchor Point
 */
export type AnchorPoint2 =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Text animator Scale
 */
export type Scale2 =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Text animator Skew
 */
export type Skew2 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Text animator Skew Axis
 */
export type SkewAxis2 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Text animator Rotation
 */
export type Rotation3 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Text animator Opacity
 */
export type Opacity7 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Text animator Stroke Width
 */
export type StrokeWidth1 =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Text animator Stroke Color
 */
export type StrokeColor =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Text animator Fill Color
 */
export type FillColor =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Text animator Fill Hue
 */
export type FillHue =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Text animator Fill Saturation
 */
export type FillSaturation =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Text animator Fill Brightness
 */
export type FillBrightness =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Text animator Tracking
 */
export type Tracking =
  | {
      /**
       * Property Value
       */
      k?: number;
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number;
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis
           */
          x?: number;
          /**
           * bezier y axis
           */
          y?: number;
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    };
/**
 * Text animators
 */
export type Animators = {
  p?: Position5;
  a?: AnchorPoint2;
  s?: Scale2;
  sk?: Skew2;
  sa?: SkewAxis2;
  r?: Rotation3;
  o?: Opacity7;
  sw?: StrokeWidth1;
  sc?: StrokeColor;
  fc?: FillColor;
  fh?: FillHue;
  fs?: FillSaturation;
  fb?: FillBrightness;
  t?: Tracking;
  [k: string]: any;
}[];
/**
 * Text Anchor Point Grouping
 */
export type AnchorPointGrouping = 1 | 2 | 3 | 4;
/**
 * Text Grouping Alignment
 */
export type GroupingAlignment =
  | {
      /**
       * Property Value
       */
      k?: any[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      [k: string]: any;
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: {
        /**
         * Start value of keyframe segment.
         */
        s?: number[];
        /**
         * Start time of keyframe segment.
         */
        t?: number;
        /**
         * Bezier curve interpolation in value.
         */
        i?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        /**
         * Bezier curve interpolation out value.
         */
        o?: {
          /**
           * bezier x axis. Array of numbers.
           */
          x?: any[];
          /**
           * bezier y axis. Array of numbers.
           */
          y?: any[];
          [k: string]: any;
        };
        [k: string]: any;
      }[];
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string;
      /**
       * Property Index. Used for expressions.
       */
      ix?: string;
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[];
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[];
      [k: string]: any;
    };
/**
 * Keyframe Time
 */
export type Time = number;
/**
 * Text Font
 */
export type Font = string;
/**
 * Text Font Color
 */
export type FontColor = any[];
/**
 * Text Justification
 */
export type Justificaiton = number;
/**
 * Text Line Height
 */
export type LineHeight = number;
/**
 * Text Font Size
 */
export type Size2 = number;
/**
 * Text String Value
 */
export type Text = string;
/**
 * Text Tracking
 */
export type Tracking1 = number;
/**
 * Text Document Data Keyframes
 */
export type Keyframes = {
  t?: Time;
  s?: TextProperties;
  [k: string]: any;
}[];
/**
 * Type of layer: Precomp.
 */
export type Type33 = 0;
/**
 * Transform properties
 */
export type Transform6 = {
  a?: AnchorPoint;
  p?: Position;
  s?: Scale;
  r?: Rotation;
  o?: Opacity;
  px?: PositionX;
  py?: PositionY;
  pz?: PositionZ;
  sk?: Skew;
  sa?: SkewAxis;
  [k: string]: any;
};
/**
 * Auto-Orient along path AE property.
 */
export type AutoOrient5 = 0 | 1;
/**
 * Blend Mode
 */
export type BlendMode4 = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15;
/**
 * 3d layer flag
 */
export type DLayer5 = 0 | 1;
/**
 * Layer index in AE. Used for parenting and expressions.
 */
export type Index5 = number;
/**
 * Parsed layer name used as html class on SVG/HTML renderer
 */
export type Class5 = string;
/**
 * Parsed layer name used as html id on SVG/HTML renderer
 */
export type LayerHTMLID5 = string;
/**
 * In Point of layer. Sets the initial frame of the layer.
 */
export type InPoint6 = number;
/**
 * Out Point of layer. Sets the final frame of the layer.
 */
export type OutPoint6 = number;
/**
 * Start Time of layer. Sets the start time of the layer.
 */
export type StartTime5 = number;
/**
 * After Effects Layer Name. Used for expressions.
 */
export type Name34 = number;
/**
 * Boolean when layer has a mask. Will be deprecated in favor of checking masksProperties.
 */
export type HasMasks4 = number;
/**
 * List of Masks
 */
export type MasksProperties4 = {
  inv?: Inverted;
  nm?: Name2;
  pt?: Points;
  o?: Opacity1;
  mode?: Mode;
  [k: string]: any;
}[];
/**
 * List of Effects
 */
export type Effects11 = (
  | {
      ix?: EffectIndex;
      mn?: MatchName;
      nm?: Name3;
      ty?: Type1;
      v?: Value;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex1;
      mn?: MatchName1;
      nm?: Name4;
      ty?: Type2;
      v?: Value1;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex2;
      mn?: MatchName2;
      nm?: Name5;
      ty?: Type3;
      v?: Value2;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex3;
      mn?: MatchName3;
      nm?: Name6;
      ty?: Type4;
      v?: Value3;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex4;
      mn?: MatchName4;
      nm?: Name7;
      ty?: Type5;
      v?: Value4;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex5;
      mn?: MatchName5;
      nm?: Name8;
      ty?: Type6;
      ef?: Effects;
      /**
       * Enabled AE property value
       */
      en?: number;
      [k: string]: any;
    }
  | any
  | {
      ix?: EffectIndex6;
      mn?: MatchName6;
      nm?: Name9;
      ty?: Type7;
      v?: Value5;
      [k: string]: any;
    }
  | {
      [k: string]: any;
    }
  | {
      ix?: EffectIndex7;
      mn?: MatchName7;
      nm?: Name10;
      ty?: Type8;
      v?: Value6;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex8;
      mn?: MatchName8;
      nm?: Name11;
      ty?: Type9;
      ef?: Effects1;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex9;
      mn?: MatchName9;
      nm?: Name12;
      ty?: Type10;
      ef?: Effects2;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex10;
      mn?: MatchName10;
      nm?: Name13;
      ty?: Type11;
      ef?: Effects3;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex11;
      mn?: MatchName11;
      nm?: Name14;
      ty?: Type12;
      ef?: Effects4;
      [k: string]: any;
    }
  | {
      ix?: EffectIndex12;
      mn?: MatchName12;
      nm?: Name15;
      ty?: Type13;
      ef?: Effects5;
      [k: string]: any;
    }
)[];
/**
 * Layer Time Stretching
 */
export type Stretch5 = number;
/**
 * Layer Parent. Uses ind of parent.
 */
export type Parent5 = number;
/**
 * id pointing to the source composition defined on 'assets' object
 */
export type ReferenceID1 = string;
/**
 * Comp's Time remapping
 */
export type TimeRemapping = {
  /**
   * Property Value keyframes
   */
  k?: {
    /**
     * Start value of keyframe segment.
     */
    s?: number;
    /**
     * Start time of keyframe segment.
     */
    t?: number;
    /**
     * Bezier curve interpolation in value.
     */
    i?: {
      /**
       * bezier x axis
       */
      x?: number;
      /**
       * bezier y axis
       */
      y?: number;
      [k: string]: any;
    };
    [k: string]: any;
  }[];
  /**
   * Property Expression. An AE expression that modifies the value.
   */
  x?: string;
  /**
   * Property Index. Used for expressions.
   */
  ix?: string;
  [k: string]: any;
};
/**
 * List of Composition Layers
 */
export type Layers = (ShapeLayer | SolidLayer | ImageLayer | NullLayer | TextLayer | PreCompLayer)[];
/**
 * Image Height
 */
export type Height1 = number;
/**
 * Image Width
 */
export type Width2 = number;
/**
 * Image ID
 */
export type ID = string;
/**
 * Image name
 */
export type ImageName = string;
/**
 * Image path
 */
export type ImagePath = string;
/**
 * Precomp ID
 */
export type ID1 = string;
/**
 * List of Precomp Layers
 */
export type Layers1 = (ShapeLayer | SolidLayer | ImageLayer | NullLayer | TextLayer | PreCompLayer)[];
/**
 * source items that can be used in multiple places. Comps and Images for now.
 */
export type Assets = (ImageAsset | PreCompAsset)[];
/**
 * Character Value
 */
export type Character = string;
/**
 * Character Font Family
 */
export type FontFamily = string;
/**
 * Character Font Size
 */
export type FontSize = string;
/**
 * Character Font Style
 */
export type FontStyle = string;
/**
 * Character Width
 */
export type Width3 = number;
/**
 * Character Items Keys
 */
export type Keys = {
  k?: PathDef;
  /**
   * Property Expression. An AE expression that modifies the value.
   */
  x?: string;
  /**
   * Property Index. Used for expressions.
   */
  ix?: string;
  /**
   * Defines if property is animated
   */
  a?: number;
  [k: string]: any;
};
/**
 * Character Composing Shapes
 */
export type CharacterShapes = {
  0?: Items2;
  [k: string]: any;
}[];
/**
 * source chars for text layers
 */
export type Chars = {
  ch?: Character;
  fFamily?: FontFamily;
  size?: FontSize;
  style?: FontStyle;
  w?: Width3;
  data?: CharacterData;
  [k: string]: any;
}[];

export interface Animation {
  ip?: InPoint;
  op?: OutPoint;
  fr?: FrameRate;
  w?: Width;
  ddd?: D;
  h?: Height;
  v?: Version;
  nm?: Name;
  layers?: Layers;
  assets?: Assets;
  chars?: Chars;
  fonts?: Fonts;
  [k: string]: any;
}
export interface ShapeLayer {
  ty?: Type;
  ks?: Transform;
  ao?: AutoOrient;
  bm?: BlendMode;
  tt?: MatteMode;
  ddd?: DLayer;
  ind?: Index;
  cl?: Class;
  ln?: LayerHTMLID;
  ip?: InPoint1;
  op?: OutPoint1;
  st?: StartTime;
  nm?: Name1;
  hasMask?: HasMasks;
  masksProperties?: MasksProperties;
  ef?: Effects6;
  sr?: Stretch;
  parent?: Parent;
  shapes?: Items1;
  [k: string]: any;
}
/**
 * Property Value
 */
export interface PathDef {
  /**
   * Closed property of shape
   */
  c?: boolean;
  /**
   * Bezier curve In points. Array of 2 dimensional arrays.
   */
  i?: number[][];
  /**
   * Bezier curve Out points. Array of 2 dimensional arrays.
   */
  o?: number[][];
  /**
   * Bezier curve Vertices. Array of 2 dimensional arrays.
   */
  v?: number[][];
  [k: string]: any;
}
export interface PathDef1 {
  /**
   * Closed property of shape
   */
  c?: boolean;
  /**
   * Bezier curve In points. Array of 2 dimensional arrays.
   */
  i?: number[][];
  /**
   * Bezier curve Out points. Array of 2 dimensional arrays.
   */
  o?: number[][];
  /**
   * Bezier curve Vertices. Array of 2 dimensional arrays.
   */
  v?: number[][];
  [k: string]: any;
}
export interface PathShape {
  mn?: MatchName13;
  nm?: Name16;
  d?: Direction;
  ty?: Type14;
  ks?: Vertices;
  [k: string]: any;
}
export interface RectShape {
  mn?: MatchName14;
  nm?: Name17;
  d?: Direction1;
  ty?: Type15;
  p?: Position1;
  s?: Size;
  r?: RoundedCorners;
  [k: string]: any;
}
export interface EllipseShape {
  mn?: MatchName15;
  nm?: Name18;
  d?: Direction2;
  ty?: Type16;
  p?: Position2;
  s?: Size1;
  [k: string]: any;
}
export interface StarShape {
  mn?: MatchName16;
  nm?: Name19;
  d?: Direction3;
  ty?: Type17;
  p?: Position3;
  ir?: InnerRadius;
  is?: InnerRoundness;
  or?: OuterRadius;
  os?: OuterRoundness;
  r?: Rotation1;
  pt?: Points1;
  sy?: StarType;
  [k: string]: any;
}
export interface FillShape {
  mn?: MatchName17;
  nm?: Name20;
  ty?: Type18;
  o?: Opacity2;
  c?: Color;
  [k: string]: any;
}
export interface GradientFillShape {
  mn?: MatchName18;
  nm?: Name21;
  ty?: Type19;
  o?: Opacity3;
  s?: StartPoint;
  e?: EndPoint;
  t?: Type20;
  h?: HighlightLength;
  a?: HighlightAngle;
  g?: GradientColors;
  [k: string]: any;
}
/**
 * Gradient Colors
 */
export interface GradientColors {
  [k: string]: any;
}
export interface GradientStrokeShape {
  mn?: MatchName19;
  nm?: Name22;
  ty?: Type21;
  o?: Opacity4;
  s?: StartPoint1;
  e?: EndPoint1;
  t?: Type22;
  h?: HighlightLength1;
  a?: HighlightAngle1;
  g?: GradientColors1;
  w?: StrokeWidth;
  lc?: LineCap;
  lj?: LineJoin;
  ml?: MiterLimit;
  [k: string]: any;
}
/**
 * Gradient Colors
 */
export interface GradientColors1 {
  [k: string]: any;
}
export interface StrokeShape {
  mn?: MatchName20;
  nm?: Name23;
  ty?: Type23;
  lc?: LineCap1;
  lj?: LineJoin1;
  ml?: MiterLimit1;
  o?: Opacity5;
  w?: Width1;
  c?: Color1;
  [k: string]: any;
}
export interface MergeShape {
  mn?: MatchName21;
  nm?: Name24;
  ty?: Type24;
  mm?: MergeMode;
  [k: string]: any;
}
export interface TrimShape {
  mn?: MatchName22;
  nm?: Name25;
  ty?: Type25;
  s?: Start;
  e?: End;
  o?: Offset;
  [k: string]: any;
}
export interface GroupShape {
  mn?: MatchName23;
  nm?: Name26;
  ty?: Type26;
  np?: NumberOfProperties;
  it?: Items;
  [k: string]: any;
}
export interface RoundShape {
  mn?: MatchName24;
  nm?: Name27;
  ty?: Type27;
  r?: Radius;
  [k: string]: any;
}
export interface TransformShape {
  nm?: Name28;
  a?: AnchorPoint1;
  p?: Position4;
  s?: Scale1;
  r?: Rotation2;
  o?: Opacity6;
  sk?: Skew1;
  sa?: SkewAxis1;
  [k: string]: any;
}
export interface RepeaterShape {
  mn?: MatchName25;
  nm?: Name29;
  ty?: Type28;
  c?: Copies;
  o?: Offset1;
  m?: Composite;
  tr?: Transform1;
  [k: string]: any;
}
export interface SolidLayer {
  ty?: Type29;
  ks?: Transform2;
  ao?: AutoOrient1;
  bm?: BlendMode1;
  ddd?: DLayer1;
  ind?: Index1;
  cl?: Class1;
  ln?: LayerHTMLID1;
  ip?: InPoint2;
  op?: OutPoint2;
  st?: StartTime1;
  nm?: Name30;
  hasMask?: HasMasks1;
  masksProperties?: MasksProperties1;
  ef?: Effects7;
  sr?: Stretch1;
  parent?: Parent1;
  sc?: SolidColor;
  sh?: SolidHeight;
  sw?: SolidWidth;
  [k: string]: any;
}
export interface ImageLayer {
  ty?: Type30;
  ks?: Transform3;
  ao?: AutoOrient2;
  bm?: BlendMode2;
  ddd?: DLayer2;
  ind?: Index2;
  cl?: Class2;
  ln?: LayerHTMLID2;
  ip?: InPoint3;
  op?: OutPoint3;
  st?: StartTime2;
  nm?: Name31;
  hasMask?: HasMasks2;
  masksProperties?: MasksProperties2;
  ef?: Effects8;
  sr?: Stretch2;
  parent?: Parent2;
  refId?: ReferenceID;
  [k: string]: any;
}
export interface NullLayer {
  ty?: Type31;
  ks?: Transform4;
  ao?: AutoOrient3;
  ddd?: DLayer3;
  ind?: Index3;
  cl?: Class3;
  ln?: LayerHTMLID3;
  ip?: InPoint4;
  op?: OutPoint4;
  st?: StartTime3;
  nm?: Name32;
  ef?: Effects9;
  sr?: Stretch3;
  parent?: Parent3;
  [k: string]: any;
}
export interface TextLayer {
  ty?: Type32;
  ks?: Transform5;
  ao?: AutoOrient4;
  bm?: BlendMode3;
  ddd?: DLayer4;
  ind?: Index4;
  cl?: Class4;
  ln?: LayerHTMLID4;
  ip?: InPoint5;
  op?: OutPoint5;
  st?: StartTime4;
  nm?: Name33;
  hasMask?: HasMasks3;
  masksProperties?: MasksProperties3;
  ef?: Effects10;
  sr?: Stretch4;
  parent?: Parent4;
  t?: TextData;
  [k: string]: any;
}
/**
 * Text Data
 */
export interface TextData {
  a?: Animators;
  m?: MoreOptions;
  p?: TextPath;
  d?: Document;
  [k: string]: any;
}
/**
 * Text More Options
 */
export interface MoreOptions {
  g?: AnchorPointGrouping;
  a?: GroupingAlignment;
  [k: string]: any;
}
/**
 * Text Path
 */
export interface TextPath {
  [k: string]: any;
}
/**
 * Text Document Data
 */
export interface Document {
  k?: Keyframes;
  [k: string]: any;
}
/**
 * Text Properties
 */
export interface TextProperties {
  f?: Font;
  fc?: FontColor;
  j?: Justificaiton;
  lh?: LineHeight;
  s?: Size2;
  t?: Text;
  tr?: Tracking1;
  [k: string]: any;
}
export interface PreCompLayer {
  ty?: Type33;
  ks?: Transform6;
  ao?: AutoOrient5;
  bm?: BlendMode4;
  ddd?: DLayer5;
  ind?: Index5;
  cl?: Class5;
  ln?: LayerHTMLID5;
  ip?: InPoint6;
  op?: OutPoint6;
  st?: StartTime5;
  nm?: Name34;
  hasMask?: HasMasks4;
  masksProperties?: MasksProperties4;
  ef?: Effects11;
  sr?: Stretch5;
  parent?: Parent5;
  refId?: ReferenceID1;
  tm?: TimeRemapping;
  [k: string]: any;
}
export interface ImageAsset {
  h?: Height1;
  w?: Width2;
  id?: ID;
  p?: ImageName;
  u?: ImagePath;
  [k: string]: any;
}
export interface PreCompAsset {
  id?: ID1;
  layers?: Layers1;
  [k: string]: any;
}
/**
 * Character Data
 */
export interface CharacterData {
  0?: CharacterShapes;
  [k: string]: any;
}
/**
 * Character Items
 */
export interface Items2 {
  0?: Keys;
  [k: string]: any;
}
/**
 * Available fonts.
 */
export interface Fonts {
  list?: Font1[];
  [k: string]: any;
}
export interface Font1 {
  origin?: number;
  fPath?: string;
  fClass?: string;
  fFamily?: string;
  fWeight?: string;
  fStyle?: string;
  fName?: string;
  ascent?: number;
  [k: string]: any;
}
